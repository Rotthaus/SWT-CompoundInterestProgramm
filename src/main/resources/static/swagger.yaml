swagger: '2.0'
info:
  description: Backend for the software engineering project
  version: '6.0'
  title: software engineering project
  termsOfService: urn:tos
  contact: {}
schemes:
  - http
tags:
  - name: auth-controller
    description: Auth Controller
  - name: compound-controller
    description: Compound Controller
  - name: user-controller
    description: User Controller
paths:
  /api/auth/login:
    post:
      tags:
        - auth-controller
      summary: returns tokens for a specific user from server
      operationId: loginHandlerUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: login
          description: Login
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            example: {
              "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVc2VyIERldGFpbHMiLCJpc3MiOiJTV1QtUHJvamVrdCIsImV4cCI6MTY3MjkxNDQyMCwiaWF0IjoxNjcyOTEzMjIwLCJlbWFpbCI6IkpvaG4zIn0.Bt5_6F_Amn5ucXDNffGcHynHr7CEkY1BKW2QtB6sAMg",
              "refreshToken": "7455bf9e-b8ef-4dec-be34-4b9135c2a5ba",
              "tokenType": "Bearer "
            }
        '401':
          description: Unauthorized
          schema:
            type: object
            example: Invalid Login Credentials
      deprecated: false
  /api/auth/register:
    post:
      tags:
        - auth-controller
      summary: adds a user to the database
      operationId: registerHandlerUsingPOST
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - '*/*'
      parameters:
        - in: body
          name: register
          description: register
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            example: {
              "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJVc2VyIERldGFpbHMiLCJpc3MiOiJTV1QtUHJvamVrdCIsImV4cCI6MTY3MjkxNDQyMCwiaWF0IjoxNjcyOTEzMjIwLCJlbWFpbCI6IkpvaG4zIn0.Bt5_6F_Amn5ucXDNffGcHynHr7CEkY1BKW2QtB6sAMg",
              "refreshToken": "7455bf9e-b8ef-4dec-be34-4b9135c2a5ba",
              "tokenType": "Bearer "}
        '400':
          description: Bad Request - invalid Credentials
        '409':
          description: Conflict - E-mail already exist
      deprecated: false
  /api/compound/calcData:
    post:
      tags:
        - compound-controller
      summary: calculate a data record - requires no authentication
      operationId: calcUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: calcData
          description: Calculate one of the four components of compound interest (initial capital, interest rate, period, final capital) based on the provided input </br></br> - parameter with 0 as value will be calculated </br> - the method need to be choosen by PAYOUT or ACCUMULATION
          schema:
            type: object
            properties:
              initalCapital:
                example: 100
                type: number
              interestRate:
                example: 1.5
                type: number
              period:
                example: 6
                type: number
              finalCapital:
                type: number
              method:
                example: PAYOUT
                type: string
      responses:
        '201':
          description: Created
          schema:
            type: object
            example: {"initialCapital":"4.990041592683173","interestRate":"1.0","period":"7.0","finalCapital":"5.35","calculateComponent":"INITIALCAPITAL","method":"PAYOUT"}
        '409':
          description: Conflict - Unable to calculate the data
        '500':
          description: Internal Server Error - Data validation failed
      deprecated: false
  /api/compound/deleteData:
    post:
      tags:
        - compound-controller
      summary: delete a data record from the server for a specific user
      operationId: deleteCompoundInterestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: saveData
          description: delete a data record from the server for a specific user
          schema:
            type: object
            properties:
              id:
                example: 1
      responses:
        '200':
          description: OK - data deleted
        '400':
          description: Bad Request - data cant be deleted
      deprecated: false
  /api/compound/getData:
    get:
      tags:
        - compound-controller
      summary: Retrieve the list of compound interests for the current user
      description: Retrieve the list of compound interests for the current user
      operationId: getCompoundInterest
      produces:
        - '*/*'
      responses:
        '200':
          description: "OK "
          schema:
            type: object
            example:     [{
              "id": 1,
              "initialCapital": 1.0,
              "period": 7.0,
              "interestRate": 1.0,
              "finalCapital": 5.35,
              "calculatedComponent": "FINALCAPITAL",
              "method": "PAYOUT",
              "date": "2023-01-16",
              "idUser": 3
            },
              {
                "id": 2,
                "initialCapital": 1.0,
                "period": 7.0,
                "interestRate": 1.0,
                "finalCapital": 5.35,
                "calculatedComponent": "FINALCAPITAL",
                "method": "PAYOUT",
                "date": "2023-01-16",
                "idUser": 3}]
        '204' :
          description: No Content - No data saved for the user
        '500':
          description: Internal Server Error -An error occurred while retrieving the data
      deprecated: false
  /api/compound/saveData:
    post:
      tags:
        - compound-controller
      summary: Save data record
      operationId: saveData
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: saveData
          description: Saving a data record to the Database for a specific user </br></br> - the calculatedComponent need to be choosen by INITIALCAPITAL, PERIOD, INTERESTRATE or FINALCAPITAL </br> - the method need to be set by PAYOUT or ACCUMULATION <br>
          schema:
            type: object
            properties:
              initalCapital:
                example: 100
                type: number
              interestRate:
                example: 1.5
                type: number
              period:
                example: 6
                type: number
              finalCapital:
                example: 199
                type: number
              calculatedComponent:
                example: FINALCAPITAL
                type: string
              method:
                example: PAYOUT
                type: string
      responses:
        '201':
          description: Created - Data saved successfully
        '400':
          description: Conflict -  Missing parameter
        '409':
          description: Bad Request - Data can't be saved
      deprecated: false
  /api/user/deleteUser:
    post:
      tags:
        - user-controller
      summary: deletes a user
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: password
          description: password
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/user/info:
    get:
      tags:
        - user-controller
      summary: returns details for a specific user
      operationId: getUserDetails
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            example: {"id":"1","email":"user@swt-projekt.de","userRole":"USER"}
        '409':
          description: Conflict - Problem with authentication
      deprecated: false
